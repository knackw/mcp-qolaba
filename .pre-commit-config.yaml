repos:
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        args: ["--line-length", "100"]
        additional_dependencies: []

  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        additional_dependencies: []
        args: ["--max-line-length", "100"]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        additional_dependencies: []
        args: ["--config-file", "pyproject.toml"]

default_stages: [commit, push]
fail_fast: false
minimum_pre_commit_version: 3.0.0

repos:
  # Pre-commit hooks repo for basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: no-commit-to-branch
        name: prevent commits to main
        args: [--branch, main]

  # Validate pyproject.toml
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.24.1
    hooks:
      - id: validate-pyproject

  # Prettier for YAML/JSON formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [yaml, json5]

  # Black code formatter
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3.10
        args: [--line-length=100]

  # isort import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  # Ruff linter and formatter (fast modern alternative to flake8)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.1
    hooks:
      # Run the linter with fixes
      - id: ruff-check
        args: [--fix, --exit-non-zero-on-fix]
      # Run the formatter
      - id: ruff-format

  # MyPy static type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [
          pydantic>=2.11.7,
          httpx>=0.28.1,
          types-requests
        ]
        args: [--config-file=pyproject.toml]
        exclude: ^(tests/|migrations/|docs/)

  # Security checks with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.7
    hooks:
      - id: bandit
        args: [-c, pyproject.toml, -ll]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^tests/

  # Local hooks for custom quality checks
  - repo: local
    hooks:
      # Type checking with ty (existing)
      - id: ty
        name: ty check
        entry: uv run ty check
        language: system
        types: [python]
        files: ^src/|^tests/
        pass_filenames: false
        require_serial: true

      # Run unit tests before commit
      - id: pytest-unit
        name: Run unit tests
        entry: python -m pytest tests/unit -x --tb=short
        language: system
        types: [python]
        pass_filenames: false
        stages: [pre-commit]

      # Custom linting integration
      - id: custom-linting-check
        name: Custom quality checks
        entry: python scripts/run_linting.py --check-config
        language: system
        types: [python]
        pass_filenames: false
        stages: [pre-commit]
